name: Azure Function App CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'src/funcapp/**'
      - '.github/workflows/function-app-ci-cd.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'src/funcapp/**'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/funcapp'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and activate virtual environment
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          python -m venv .venv
          source .venv/bin/activate

      - name: Install dependencies
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8 (if available)
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          pip install flake8 || true
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true

      - name: Create artifact
        run: |
          cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          zip -r ../../function-app.zip . -x ".venv/*" "__pycache__/*" "*.pyc"

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: function-app
          path: function-app.zip

  # Deployment job - uncomment and configure when ready to deploy
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   if: github.ref == 'refs/heads/main'
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-azure.outputs.webapp-url }}
  #   
  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: function-app
  #
  #     - name: Deploy to Azure Functions
  #       id: deploy-to-azure
  #       uses: Azure/functions-action@v1
  #       with:
  #         app-name: 'your-function-app-name'
  #         package: 'function-app.zip'
  #         publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
